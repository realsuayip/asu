apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    name: web
    py-context: django
spec:
  replicas: 1
  selector:
    matchLabels:
      name: web
  template:
    metadata:
      labels:
        name: web
    spec:
      containers:
        - name: asu-web
          image: docker.io/library/asu-python:latest
          args: [
            "gunicorn",
            "asu.gateways.asgi",
            "--bind", "0.0.0.0:8000",
            "--workers", "4",
            "--worker-class", "asu.utils.workers.UvicornWorker",
            "--access-logfile", "-",
          ]
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: asu-secrets
            - secretRef:
                name: postgres-secrets
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket
  labels:
    name: websocket
    py-context: django
spec:
  replicas: 1
  selector:
    matchLabels:
      name: websocket
  template:
    metadata:
      labels:
        name: websocket
    spec:
      containers:
        - name: asu-websocket
          image: docker.io/library/asu-python:latest
          args: [
            "gunicorn",
            "asu.gateways.websocket",
            "--bind", "0.0.0.0:8000",
            "--workers", "4",
            "--worker-class", "asu.utils.workers.UvicornWorker",
            "--access-logfile", "-",
          ]
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: asu-secrets
            - secretRef:
                name: postgres-secrets

---

apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    name: web
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: websocket-service
spec:
  selector:
    name: websocket
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
