version: '3.7'

services:
  db:
    container_name: asu-postgres
    image: postgres:15.2-alpine
    user: postgres
    env_file: ../../conf/prod/postgres.env
    restart: unless-stopped

  redis:
    container_name: asu-redis
    image: redis:7-alpine
    user: redis
    restart: unless-stopped

  rabbitmq:
    container_name: asu-rabbitmq
    image: rabbitmq:3.11-alpine
    restart: unless-stopped

  nginx:
    container_name: asu-nginx
    build:
      context: ../..
      dockerfile: docker/prod/nginx/Dockerfile
    ports:
      - "443:443"
    restart: unless-stopped

  web: &django
    container_name: asu-web
    image: asu-python
    build:
      context: ../..
      dockerfile: docker/prod/django/Dockerfile
    command: >
      gunicorn
      asu.gateways.wsgi
      --bind 0.0.0.0:8000
      --workers 4
      --access-logfile '-'
    env_file: &django_env
      - ../../conf/prod/django.env
      - ../../conf/prod/postgres.env
    environment:
      DJANGO_CONTEXT: web
    depends_on:
      - redis
      - db
    restart: unless-stopped

  websocket:
    <<: *django
    container_name: asu-websocket
    command: >
      gunicorn asu.gateways.websocket
      --bind 0.0.0.0:8000
      --workers 4
      --worker-class asu.utils.workers.UvicornWorker
      --access-logfile '-'
    environment:
      DJANGO_CONTEXT: websocket

  celery-worker: &celery
    image: asu-python
    container_name: asu-celery-worker
    command: celery -A asu worker -l info
    env_file: *django_env
    environment:
      DJANGO_CONTEXT: celery
    depends_on:
      - web
      - rabbitmq
    restart: unless-stopped

  celery-beat:
    <<: *celery
    container_name: asu-celery-beat
    command: celery -A asu beat -l info
