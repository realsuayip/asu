version: '3.7'

services:
  db:
    container_name: asu-postgres
    image: postgres:16.1-alpine
    user: postgres
    env_file: ../../conf/dev/postgres.env
    ports:
      - "5432:5432"

  redis:
    container_name: asu-redis
    image: redis:7-alpine
    user: redis

  rabbitmq:
    container_name: asu-rabbitmq
    image: rabbitmq:3.12-alpine

  web:
    container_name: asu-web
    image: asu-python
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    env_file: &django_env
      - ../../conf/dev/django.env
      - ../../conf/dev/postgres.env
    environment:
      DJANGO_CONTEXT: web
    volumes:
      - ../..:/code
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    restart: on-failure

  celery-worker: &celery
    image: asu-python
    container_name: asu-celery-worker
    command: celery -A asu worker -l info
    env_file: *django_env
    environment:
      DJANGO_CONTEXT: celery
    volumes:
      - ../..:/code
    depends_on:
      - web
      - rabbitmq
    restart: on-failure

  celery-beat:
    <<: *celery
    container_name: asu-celery-beat
    command: celery -A asu beat -l info
