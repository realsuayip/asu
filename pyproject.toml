[project]
name = "asu"
version = "0.1.0"
requires-python = "==3.12.*"
dependencies = [
    "django[argon2] ~= 5.1",
    "djangorestframework ~= 3.15",
    "asgiref ~= 3.8",
    "channels ~= 4.1",
    "channels-redis ~= 4.2",
    "drf-spectacular",
    "drf-nested-routers ~= 0.94",
    "django-filter ~= 24.3",
    "django-cors-headers ~= 4.6",
    "django-oauth-toolkit ~= 3.0",
    "django-two-factor-auth ~= 1.17",
    "django-storages ~= 1.14",
    "django-ipware ~= 7.0",
    "django-celery-beat ~= 2.7",
    "django-stubs-ext",
    "django-widget-tweaks ~= 1.5",
    "sorl-thumbnail ~= 12.11",
    "celery ~= 5.4",
    "psycopg[c] ~= 3.2",
    "redis ~= 5.2",
    "hiredis ~= 3.0",
    "Pillow ~= 10.4",
    "python-magic ~= 0.4",
    "boto3 ~= 1.35",
    "phonenumbers ~= 8.13",
    "sentry-sdk ~= 2.18",
    "envanter ~= 1.2",
    "pytest>=8.3.3",
    "pytest-django>=4.9.0",
    "pytest-sugar>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "factory-boy",
    "coverage",
    # Typing
    "mypy",
    "django-stubs",
    "djangorestframework-stubs",
    "types-oauthlib",
    "types-Pillow",
    "celery-types",
    # Misc
    "daphne",
    "django-debug-toolbar",
    "ipython",
    "tblib",
    "watchfiles",
]
prod = [
    "gunicorn ~= 23.0",
    "uvicorn ~= 0.32",
    "uvloop ~= 0.21",
    "httptools ~= 0.6",
    "websockets ~= 13.1",
]

[tool.ruff]
fix = true
show-fixes = true
target-version = "py312"
line-length = 88

[tool.ruff.lint]
fixable = ["I"]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "RUF", # Ruff-specific
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming,
    "BLE", # flake8-blind-except
    "DTZ", # flake8-datetimez
    "DJ", # flake8-django
    "FA", # flake8-future-annotations
    "G", # flake8-logging-format
    "T20", # flake8-print
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL", # pylint
    "PERF", # perflint
]
ignore = ["B904", "RUF012", "SIM105", "PTH123", "PLR2004", "PLR0913", "PLR0911"]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = [
    "future",
    "standard-library",
    "django",
    "rest_framework",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
django = ["django"]
rest_framework = ["rest_framework"]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.extend-per-file-ignores]
"*/migrations/*" = ["E501"]

[tool.mypy]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true

[tool.django-stubs]
django_settings_module = "asu.settings"

[tool.coverage.run]
source = ["asu"]
omit = [
    "asu/gateways/*",
    "asu/settings/*",
    "asu/utils/workers.py",
    "*/migrations/*",
]
branch = true
dynamic_context = "test_function"

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    'if settings.DEBUG',
    'if getattr\(self, "swagger_fake_view", False\):',
    'raise NotImplementedError',
    'raise AssertionError',
    'def __str__',
    'def __repr__',
]


[tool.pytest.ini_options]
addopts = "--tb=short --ds=asu.settings.test -p no:warnings"
