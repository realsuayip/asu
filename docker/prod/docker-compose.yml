volumes:
  pg-data:

services:
  db:
    container_name: asu-postgres
    image: postgres:16.4-alpine
    user: postgres
    env_file: ../../conf/prod/postgres.env
    restart: unless-stopped
    volumes:
      - pg-data:/var/lib/postgresql/data

  redis:
    container_name: asu-redis
    image: redis:7.4-alpine
    user: redis
    restart: unless-stopped

  rabbitmq:
    container_name: asu-rabbitmq
    image: rabbitmq:3.13-alpine
    restart: unless-stopped

  nginx:
    container_name: asu-nginx
    build:
      context: ../..
      dockerfile: docker/prod/nginx/Dockerfile
    ports:
      - "443:443"
    restart: unless-stopped

  web: &web
    container_name: asu-web
    command: >
      gunicorn
      asu.gateways.wsgi
      --bind 0.0.0.0:8000
      --workers 4
      --access-logfile '-'
    depends_on:
      - db
      - redis
    extends:
      file: django/common.yml
      service: python

  websocket:
    <<: *web
    container_name: asu-websocket
    command: >
      gunicorn asu.gateways.websocket
      --bind 0.0.0.0:7000
      --workers 4
      --worker-class asu.utils.workers.UvicornWorker
      --access-logfile '-'

  celery-worker: &celery
    container_name: asu-celery-worker
    command: celery -A asu worker -l info
    depends_on:
      - rabbitmq
      - db
      - redis
    extends:
      file: django/common.yml
      service: python

  celery-beat:
    <<: *celery
    container_name: asu-celery-beat
    command: celery -A asu beat -l info
    depends_on:
      - rabbitmq
      - db
      - redis
